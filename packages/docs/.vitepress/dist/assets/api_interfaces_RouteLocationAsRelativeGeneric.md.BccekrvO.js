import{_ as e,c as a,o,a3 as t}from"./chunks/framework.BBx4Jw7q.js";const m=JSON.parse('{"title":"Interface: RouteLocationAsRelativeGeneric","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouteLocationAsRelativeGeneric.md","filePath":"api/interfaces/RouteLocationAsRelativeGeneric.md"}'),r={name:"api/interfaces/RouteLocationAsRelativeGeneric.md"},i=t('<p><a href="./../">API Documentation</a> / RouteLocationAsRelativeGeneric</p><h1 id="Interface-RouteLocationAsRelativeGeneric" tabindex="-1">Interface: RouteLocationAsRelativeGeneric <a class="header-anchor" href="#Interface-RouteLocationAsRelativeGeneric" aria-label="Permalink to &quot;Interface: RouteLocationAsRelativeGeneric&quot;">​</a></h1><p>Generic version of <a href="./../#RouteLocationAsRelative">RouteLocationAsRelative</a>. It is used when no <a href="./../#RouteMap">RouteMap</a> is provided.</p><h2 id="Hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#Hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><a href="./RouteQueryAndHash.html"><code>RouteQueryAndHash</code></a></p></li><li><p><a href="./RouteLocationOptions.html"><code>RouteLocationOptions</code></a></p><p>↳ <strong><code>RouteLocationAsRelativeGeneric</code></strong></p><p>↳↳ <a href="./RouteLocationAsRelativeTyped.html"><code>RouteLocationAsRelativeTyped</code></a></p></li></ul><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="force" tabindex="-1">force <a class="header-anchor" href="#force" aria-label="Permalink to &quot;force&quot;">​</a></h3><p>• <code>Optional</code> <strong>force</strong>: <code>boolean</code></p><p>Triggers the navigation even if the location is the same as the current one. Note this will also add a new entry to the history unless <code>replace: true</code> is passed.</p><h4 id="Inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationOptions.html">RouteLocationOptions</a>.<a href="./RouteLocationOptions.html#force">force</a></p><hr><h3 id="hash" tabindex="-1">hash <a class="header-anchor" href="#hash" aria-label="Permalink to &quot;hash&quot;">​</a></h3><p>• <code>Optional</code> <strong>hash</strong>: <code>string</code></p><h4 id="Inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteQueryAndHash.html">RouteQueryAndHash</a>.<a href="./RouteQueryAndHash.html#hash">hash</a></p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><p>• <code>Optional</code> <strong>name</strong>: <a href="./../#RouteRecordNameGeneric"><code>RouteRecordNameGeneric</code></a></p><hr><h3 id="params" tabindex="-1">params <a class="header-anchor" href="#params" aria-label="Permalink to &quot;params&quot;">​</a></h3><p>• <code>Optional</code> <strong>params</strong>: <a href="./../#RouteParamsRawGeneric"><code>RouteParamsRawGeneric</code></a></p><hr><h3 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h3><p>• <code>Optional</code> <strong>path</strong>: <code>undefined</code></p><p>A relative path to the current location. This property should be removed</p><hr><h3 id="query" tabindex="-1">query <a class="header-anchor" href="#query" aria-label="Permalink to &quot;query&quot;">​</a></h3><p>• <code>Optional</code> <strong>query</strong>: <a href="./../#LocationQueryRaw"><code>LocationQueryRaw</code></a></p><h4 id="Inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-2" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteQueryAndHash.html">RouteQueryAndHash</a>.<a href="./RouteQueryAndHash.html#query">query</a></p><hr><h3 id="replace" tabindex="-1">replace <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;replace&quot;">​</a></h3><p>• <code>Optional</code> <strong>replace</strong>: <code>boolean</code></p><p>Replace the entry in the history instead of pushing a new entry</p><h4 id="Inherited-from-3" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-3" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationOptions.html">RouteLocationOptions</a>.<a href="./RouteLocationOptions.html#replace">replace</a></p><hr><h3 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-label="Permalink to &quot;state&quot;">​</a></h3><p>• <code>Optional</code> <strong>state</strong>: <a href="./HistoryState.html"><code>HistoryState</code></a></p><p>State to save using the History API. This cannot contain any reactive values and some primitives like Symbols are forbidden. More info at <a href="https://developer.mozilla.org/en-US/docs/Web/API/History/state" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/History/state</a></p><h4 id="Inherited-from-4" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from-4" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./RouteLocationOptions.html">RouteLocationOptions</a>.<a href="./RouteLocationOptions.html#state">state</a></p>',43),n=[i];function h(c,s,d,l,p,u){return o(),a("div",null,n)}const R=e(r,[["render",h]]);export{m as __pageData,R as default};
