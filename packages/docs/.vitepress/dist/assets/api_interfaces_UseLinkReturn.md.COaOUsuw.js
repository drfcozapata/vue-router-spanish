import{_ as e,c as t,o as a,a3 as r}from"./chunks/framework.BBx4Jw7q.js";const m=JSON.parse('{"title":"Interface: UseLinkReturn<Name>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/UseLinkReturn.md","filePath":"api/interfaces/UseLinkReturn.md"}'),o={name:"api/interfaces/UseLinkReturn.md"},i=r('<p><a href="./../">API Documentation</a> / UseLinkReturn</p><h1 id="Interface-UseLinkReturn-Name-" tabindex="-1">Interface: UseLinkReturn&lt;Name&gt; <a class="header-anchor" href="#Interface-UseLinkReturn-Name-" aria-label="Permalink to &quot;Interface: UseLinkReturn\\&lt;Name\\&gt;&quot;">​</a></h1><p>Return type of <a href="./../#useLink">useLink</a>.</p><h2 id="Type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#Type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Name</code></td><td style="text-align:left;">extends keyof <a href="./../#RouteMap"><code>RouteMap</code></a> = keyof <a href="./../#RouteMap"><code>RouteMap</code></a></td></tr></tbody></table><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="href" tabindex="-1">href <a class="header-anchor" href="#href" aria-label="Permalink to &quot;href&quot;">​</a></h3><p>• <strong>href</strong>: <code>ComputedRef</code>&lt;<code>string</code>&gt;</p><hr><h3 id="isActive" tabindex="-1">isActive <a class="header-anchor" href="#isActive" aria-label="Permalink to &quot;isActive&quot;">​</a></h3><p>• <strong>isActive</strong>: <code>ComputedRef</code>&lt;<code>boolean</code>&gt;</p><hr><h3 id="isExactActive" tabindex="-1">isExactActive <a class="header-anchor" href="#isExactActive" aria-label="Permalink to &quot;isExactActive&quot;">​</a></h3><p>• <strong>isExactActive</strong>: <code>ComputedRef</code>&lt;<code>boolean</code>&gt;</p><hr><h3 id="route" tabindex="-1">route <a class="header-anchor" href="#route" aria-label="Permalink to &quot;route&quot;">​</a></h3><p>• <strong>route</strong>: <code>ComputedRef</code>&lt;<a href="./RouteLocationResolvedGeneric.html"><code>RouteLocationResolvedGeneric</code></a>&gt;</p><h2 id="Methods" tabindex="-1">Methods <a class="header-anchor" href="#Methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="navigate" tabindex="-1">navigate <a class="header-anchor" href="#navigate" aria-label="Permalink to &quot;navigate&quot;">​</a></h3><p>▸ <strong>navigate</strong>(<code>e?</code>): <code>Promise</code>&lt;<code>void</code> | <a href="./NavigationFailure.html"><code>NavigationFailure</code></a>&gt;</p><h4 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>e?</code></td><td style="text-align:left;"><code>MouseEvent</code></td></tr></tbody></table><h4 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code> | <a href="./NavigationFailure.html"><code>NavigationFailure</code></a>&gt;</p>',24),n=[i];function d(s,c,l,h,u,f){return a(),t("div",null,n)}const g=e(o,[["render",d]]);export{m as __pageData,g as default};
