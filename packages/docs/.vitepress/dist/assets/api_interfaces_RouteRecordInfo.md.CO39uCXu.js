import{_ as e,c as a,o as t,a3 as r}from"./chunks/framework.BBx4Jw7q.js";const R=JSON.parse('{"title":"Interface: RouteRecordInfo<Name, Path, ParamsRaw, Params, Meta>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouteRecordInfo.md","filePath":"api/interfaces/RouteRecordInfo.md"}'),o={name:"api/interfaces/RouteRecordInfo.md"},d=r('<p><a href="./../">API Documentation</a> / RouteRecordInfo</p><h1 id="Interface-RouteRecordInfo-Name-Path-ParamsRaw-Params-Meta-" tabindex="-1">Interface: RouteRecordInfo&lt;Name, Path, ParamsRaw, Params, Meta&gt; <a class="header-anchor" href="#Interface-RouteRecordInfo-Name-Path-ParamsRaw-Params-Meta-" aria-label="Permalink to &quot;Interface: RouteRecordInfo\\&lt;Name, Path, ParamsRaw, Params, Meta\\&gt;&quot;">​</a></h1><p>Helper type to define a Typed <code>RouteRecord</code></p><p><strong><code>See</code></strong></p><p><a href="./../#RouteRecord">RouteRecord</a></p><h2 id="Type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#Type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Name</code></td><td style="text-align:left;">extends <code>string</code> | <code>symbol</code> = <code>string</code></td></tr><tr><td style="text-align:left;"><code>Path</code></td><td style="text-align:left;">extends <code>string</code> = <code>string</code></td></tr><tr><td style="text-align:left;"><code>ParamsRaw</code></td><td style="text-align:left;">extends <a href="./../#RouteParamsRawGeneric"><code>RouteParamsRawGeneric</code></a> = <a href="./../#RouteParamsRawGeneric"><code>RouteParamsRawGeneric</code></a></td></tr><tr><td style="text-align:left;"><code>Params</code></td><td style="text-align:left;">extends <a href="./../#RouteParamsGeneric"><code>RouteParamsGeneric</code></a> = <a href="./../#RouteParamsGeneric"><code>RouteParamsGeneric</code></a></td></tr><tr><td style="text-align:left;"><code>Meta</code></td><td style="text-align:left;">extends <a href="./RouteMeta.html"><code>RouteMeta</code></a> = <a href="./RouteMeta.html"><code>RouteMeta</code></a></td></tr></tbody></table><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="meta" tabindex="-1">meta <a class="header-anchor" href="#meta" aria-label="Permalink to &quot;meta&quot;">​</a></h3><p>• <strong>meta</strong>: <code>Meta</code></p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><p>• <strong>name</strong>: <code>Name</code></p><hr><h3 id="params" tabindex="-1">params <a class="header-anchor" href="#params" aria-label="Permalink to &quot;params&quot;">​</a></h3><p>• <strong>params</strong>: <code>Params</code></p><hr><h3 id="paramsRaw" tabindex="-1">paramsRaw <a class="header-anchor" href="#paramsRaw" aria-label="Permalink to &quot;paramsRaw&quot;">​</a></h3><p>• <strong>paramsRaw</strong>: <code>ParamsRaw</code></p><hr><h3 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h3><p>• <strong>path</strong>: <code>Path</code></p>',22),s=[d];function c(n,l,i,h,m,p){return t(),a("div",null,s)}const u=e(o,[["render",c]]);export{R as __pageData,u as default};
