import{_ as t,c as e,o as a,a3 as o}from"./chunks/framework.BBx4Jw7q.js";const g=JSON.parse('{"title":"Interface: RouterHistory","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouterHistory.md","filePath":"api/interfaces/RouterHistory.md"}'),r={name:"api/interfaces/RouterHistory.md"},s=o(`<p><a href="./../">API Documentation</a> / RouterHistory</p><h1 id="Interface-RouterHistory" tabindex="-1">Interface: RouterHistory <a class="header-anchor" href="#Interface-RouterHistory" aria-label="Permalink to &quot;Interface: RouterHistory&quot;">​</a></h1><p>Interface implemented by History implementations that can be passed to the router as Router.history</p><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="base" tabindex="-1">base <a class="header-anchor" href="#base" aria-label="Permalink to &quot;base&quot;">​</a></h3><p>• <code>Readonly</code> <strong>base</strong>: <code>string</code></p><p>Base path that is prepended to every url. This allows hosting an SPA at a sub-folder of a domain like <code>example.com/sub-folder</code> by having a <code>base</code> of <code>/sub-folder</code></p><hr><h3 id="location" tabindex="-1">location <a class="header-anchor" href="#location" aria-label="Permalink to &quot;location&quot;">​</a></h3><p>• <code>Readonly</code> <strong>location</strong>: <code>string</code></p><p>Current History location</p><hr><h3 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-label="Permalink to &quot;state&quot;">​</a></h3><p>• <code>Readonly</code> <strong>state</strong>: <a href="./HistoryState.html"><code>HistoryState</code></a></p><p>Current History state</p><h2 id="Methods" tabindex="-1">Methods <a class="header-anchor" href="#Methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="createHref" tabindex="-1">createHref <a class="header-anchor" href="#createHref" aria-label="Permalink to &quot;createHref&quot;">​</a></h3><p>▸ <strong>createHref</strong>(<code>location</code>): <code>string</code></p><p>Generates the corresponding href to be used in an anchor tag.</p><h4 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>location</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">history location that should create an href</td></tr></tbody></table><h4 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><hr><h3 id="destroy" tabindex="-1">destroy <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy&quot;">​</a></h3><p>▸ <strong>destroy</strong>(): <code>void</code></p><p>Clears any event listener attached by the history implementation.</p><h4 id="Returns-1" tabindex="-1">Returns <a class="header-anchor" href="#Returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="go" tabindex="-1">go <a class="header-anchor" href="#go" aria-label="Permalink to &quot;go&quot;">​</a></h3><p>▸ <strong>go</strong>(<code>delta</code>, <code>triggerListeners?</code>): <code>void</code></p><p>Traverses history in a given direction.</p><h4 id="Parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>delta</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">distance to travel. If delta is &lt; 0, it will go back, if it&#39;s &gt; 0, it will go forward by that amount of entries.</td></tr><tr><td style="text-align:left;"><code>triggerListeners?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">whether this should trigger listeners attached to the history</td></tr></tbody></table><h4 id="Returns-2" tabindex="-1">Returns <a class="header-anchor" href="#Returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><p><strong><code>Example</code></strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#24292E;">myHistory</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#6F42C1;">go</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#56B6C2;--shiki-light:#D73A49;">-</span><span style="--shiki-dark:#D19A66;--shiki-light:#005CC5;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#7F848E;--shiki-light:#6A737D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">// equivalent to window.history.back()</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#24292E;">myHistory</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#6F42C1;">go</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#005CC5;">1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#7F848E;--shiki-light:#6A737D;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">// equivalent to window.history.forward()</span></span></code></pre></div><hr><h3 id="listen" tabindex="-1">listen <a class="header-anchor" href="#listen" aria-label="Permalink to &quot;listen&quot;">​</a></h3><p>▸ <strong>listen</strong>(<code>callback</code>): () =&gt; <code>void</code></p><p>Attach a listener to the History implementation that is triggered when the navigation is triggered from outside (like the Browser back and forward buttons) or when passing <code>true</code> to RouterHistory.back and RouterHistory.forward</p><h4 id="Parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><code>NavigationCallback</code></td><td style="text-align:left;">listener to attach</td></tr></tbody></table><h4 id="Returns-3" tabindex="-1">Returns <a class="header-anchor" href="#Returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>fn</code></p><p>a callback to remove the listener</p><p>▸ (): <code>void</code></p><h5 id="Returns-4" tabindex="-1">Returns <a class="header-anchor" href="#Returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><hr><h3 id="push" tabindex="-1">push <a class="header-anchor" href="#push" aria-label="Permalink to &quot;push&quot;">​</a></h3><p>▸ <strong>push</strong>(<code>to</code>, <code>data?</code>): <code>void</code></p><p>Navigates to a location. In the case of an HTML5 History implementation, this will call <code>history.pushState</code> to effectively change the URL.</p><h4 id="Parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>to</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">location to push</td></tr><tr><td style="text-align:left;"><code>data?</code></td><td style="text-align:left;"><a href="./HistoryState.html"><code>HistoryState</code></a></td><td style="text-align:left;">optional <a href="./HistoryState.html">HistoryState</a> to be associated with the navigation entry</td></tr></tbody></table><h4 id="Returns-5" tabindex="-1">Returns <a class="header-anchor" href="#Returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="replace" tabindex="-1">replace <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;replace&quot;">​</a></h3><p>▸ <strong>replace</strong>(<code>to</code>, <code>data?</code>): <code>void</code></p><p>Same as <a href="./RouterHistory.html#push">RouterHistory.push</a> but performs a <code>history.replaceState</code> instead of <code>history.pushState</code></p><h4 id="Parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>to</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">location to set</td></tr><tr><td style="text-align:left;"><code>data?</code></td><td style="text-align:left;"><a href="./HistoryState.html"><code>HistoryState</code></a></td><td style="text-align:left;">optional <a href="./HistoryState.html">HistoryState</a> to be associated with the navigation entry</td></tr></tbody></table><h4 id="Returns-6" tabindex="-1">Returns <a class="header-anchor" href="#Returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>`,67),i=[s];function l(d,n,h,c,p,y){return a(),e("div",null,i)}const f=t(r,[["render",l]]);export{g as __pageData,f as default};
