import{_ as e,c as o,o as t,a3 as a}from"./chunks/framework.BBx4Jw7q.js";const m=JSON.parse('{"title":"Interface: RouteLocationOptions","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/interfaces/RouteLocationOptions.md","filePath":"api/interfaces/RouteLocationOptions.md"}'),r={name:"api/interfaces/RouteLocationOptions.md"},i=a('<p><a href="./../">API Documentation</a> / RouteLocationOptions</p><h1 id="Interface-RouteLocationOptions" tabindex="-1">Interface: RouteLocationOptions <a class="header-anchor" href="#Interface-RouteLocationOptions" aria-label="Permalink to &quot;Interface: RouteLocationOptions&quot;">​</a></h1><p>Common options for all navigation methods.</p><h2 id="Hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#Hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><strong><code>RouteLocationOptions</code></strong></p><p>↳ <a href="./RouteLocationNamedRaw.html"><code>RouteLocationNamedRaw</code></a></p><p>↳ <a href="./RouteLocationPathRaw.html"><code>RouteLocationPathRaw</code></a></p><p>↳ <a href="./RouteLocationAsRelativeGeneric.html"><code>RouteLocationAsRelativeGeneric</code></a></p><p>↳ <a href="./RouteLocationAsPathGeneric.html"><code>RouteLocationAsPathGeneric</code></a></p></li></ul><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="force" tabindex="-1">force <a class="header-anchor" href="#force" aria-label="Permalink to &quot;force&quot;">​</a></h3><p>• <code>Optional</code> <strong>force</strong>: <code>boolean</code></p><p>Triggers the navigation even if the location is the same as the current one. Note this will also add a new entry to the history unless <code>replace: true</code> is passed.</p><hr><h3 id="replace" tabindex="-1">replace <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;replace&quot;">​</a></h3><p>• <code>Optional</code> <strong>replace</strong>: <code>boolean</code></p><p>Replace the entry in the history instead of pushing a new entry</p><hr><h3 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-label="Permalink to &quot;state&quot;">​</a></h3><p>• <code>Optional</code> <strong>state</strong>: <a href="./HistoryState.html"><code>HistoryState</code></a></p><p>State to save using the History API. This cannot contain any reactive values and some primitives like Symbols are forbidden. More info at <a href="https://developer.mozilla.org/en-US/docs/Web/API/History/state" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/History/state</a></p>',17),n=[i];function c(s,l,h,p,d,u){return t(),o("div",null,n)}const _=e(r,[["render",c]]);export{m as __pageData,_ as default};
